{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\Assignment\\\\connect4-frontend2\\\\src\\\\components\\\\GameBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = ({\n  username,\n  gameId,\n  board: initialBoard,\n  turnProp,\n  opponentProp,\n  setInGame\n}) => {\n  _s();\n  const [board, setBoard] = useState(initialBoard);\n  const [turn, setTurn] = useState(turnProp);\n  const [opponent, setOpponent] = useState(opponentProp);\n  useEffect(() => {\n    setBoard(initialBoard);\n    setTurn(turnProp);\n    setOpponent(opponentProp);\n  }, [initialBoard, turnProp, opponentProp]);\n  useEffect(() => {\n    const handleMoveMade = ({\n      column,\n      row,\n      symbol,\n      board: updatedBoard\n    }) => {\n      setBoard(updatedBoard);\n      setTurn(prevTurn => (prevTurn === null || prevTurn === void 0 ? void 0 : prevTurn.toLowerCase()) === username.toLowerCase() ? opponent : username);\n    };\n    const handleGameOver = ({\n      winner,\n      draw\n    }) => {\n      if (draw) {\n        alert(\"Game Over: It's a draw!\");\n      } else if (winner === username) {\n        alert(\"üéâ You won!\");\n      } else {\n        alert(`üíÄ ${winner} won the game!`);\n      }\n      setInGame(false);\n    };\n    const handlePlayerDisconnected = ({\n      message\n    }) => {\n      alert(message);\n    };\n    const handlePlayerRejoined = ({\n      message\n    }) => {\n      alert(message);\n    };\n    socket.on(\"moveMade\", handleMoveMade);\n    socket.on(\"gameOver\", handleGameOver);\n    socket.on(\"playerDisconnected\", handlePlayerDisconnected);\n    socket.on(\"playerRejoined\", handlePlayerRejoined);\n    return () => {\n      socket.off(\"moveMade\", handleMoveMade);\n      socket.off(\"gameOver\", handleGameOver);\n      socket.off(\"playerDisconnected\", handlePlayerDisconnected);\n      socket.off(\"playerRejoined\", handlePlayerRejoined);\n    };\n  }, [username, opponent, setInGame]);\n  const makeMove = col => {\n    console.log(\"makeMove called:\", {\n      turn,\n      username,\n      col\n    });\n    if (!gameId || (turn === null || turn === void 0 ? void 0 : turn.toLowerCase()) !== (username === null || username === void 0 ? void 0 : username.toLowerCase())) return;\n    socket.emit(\"makeMove\", {\n      gameId,\n      column: col\n    });\n  };\n  const renderCell = (cell, rowIdx, colIdx) => {\n    let color = \"white\";\n    if (cell === \"X\") color = \"red\";\n    if (cell === \"O\") color = \"yellow\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => makeMove(colIdx),\n      style: {\n        width: \"50px\",\n        height: \"50px\",\n        backgroundColor: \"#1976d2\",\n        border: \"2px solid white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        cursor: (turn === null || turn === void 0 ? void 0 : turn.toLowerCase()) === username.toLowerCase() ? \"pointer\" : \"not-allowed\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"80%\",\n          height: \"80%\",\n          borderRadius: \"50%\",\n          backgroundColor: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, `${rowIdx}-${colIdx}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connect4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Turn:\", \" \", (turn === null || turn === void 0 ? void 0 : turn.toLowerCase()) === username.toLowerCase() ? \"‚úÖ Your Move\" : \"‚è≥ Waiting\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Playing against: \", opponent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(7, 50px)\",\n        justifyContent: \"center\",\n        gap: \"4px\",\n        marginTop: \"20px\"\n      },\n      children: board.map((row, rowIdx) => row.map((cell, colIdx) => renderCell(cell, rowIdx, colIdx)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setInGame(false),\n      style: {\n        marginTop: \"20px\",\n        padding: \"10px 20px\",\n        backgroundColor: \"#d32f2f\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"4px\",\n        cursor: \"pointer\"\n      },\n      children: \"Leave Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"jcvE7522UyRZbUnrk1WlAf0T4PU=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","socket","jsxDEV","_jsxDEV","GameBoard","username","gameId","board","initialBoard","turnProp","opponentProp","setInGame","_s","setBoard","turn","setTurn","opponent","setOpponent","handleMoveMade","column","row","symbol","updatedBoard","prevTurn","toLowerCase","handleGameOver","winner","draw","alert","handlePlayerDisconnected","message","handlePlayerRejoined","on","off","makeMove","col","console","log","emit","renderCell","cell","rowIdx","colIdx","color","onClick","style","width","height","backgroundColor","border","display","alignItems","justifyContent","cursor","children","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","marginTop","gridTemplateColumns","gap","map","padding","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/Assignment/connect4-frontend2/src/components/GameBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport socket from \"../socket\";\r\n\r\nconst GameBoard = ({\r\n  username,\r\n  gameId,\r\n  board: initialBoard,\r\n  turnProp,\r\n  opponentProp,\r\n  setInGame,\r\n}) => {\r\n  const [board, setBoard] = useState(initialBoard);\r\n  const [turn, setTurn] = useState(turnProp);\r\n  const [opponent, setOpponent] = useState(opponentProp);\r\n\r\n  useEffect(() => {\r\n    setBoard(initialBoard);\r\n    setTurn(turnProp);\r\n    setOpponent(opponentProp);\r\n  }, [initialBoard, turnProp, opponentProp]);\r\n\r\n  useEffect(() => {\r\n    const handleMoveMade = ({ column, row, symbol, board: updatedBoard }) => {\r\n      setBoard(updatedBoard);\r\n      setTurn((prevTurn) => (prevTurn?.toLowerCase() === username.toLowerCase() ? opponent : username));\r\n    };\r\n\r\n    const handleGameOver = ({ winner, draw }) => {\r\n      if (draw) {\r\n        alert(\"Game Over: It's a draw!\");\r\n      } else if (winner === username) {\r\n        alert(\"üéâ You won!\");\r\n      } else {\r\n        alert(`üíÄ ${winner} won the game!`);\r\n      }\r\n      setInGame(false);\r\n    };\r\n\r\n    const handlePlayerDisconnected = ({ message }) => {\r\n      alert(message);\r\n    };\r\n\r\n    const handlePlayerRejoined = ({ message }) => {\r\n      alert(message);\r\n    };\r\n\r\n    socket.on(\"moveMade\", handleMoveMade);\r\n    socket.on(\"gameOver\", handleGameOver);\r\n    socket.on(\"playerDisconnected\", handlePlayerDisconnected);\r\n    socket.on(\"playerRejoined\", handlePlayerRejoined);\r\n\r\n    return () => {\r\n      socket.off(\"moveMade\", handleMoveMade);\r\n      socket.off(\"gameOver\", handleGameOver);\r\n      socket.off(\"playerDisconnected\", handlePlayerDisconnected);\r\n      socket.off(\"playerRejoined\", handlePlayerRejoined);\r\n    };\r\n  }, [username, opponent, setInGame]);\r\n\r\n  const makeMove = (col) => {\r\n    console.log(\"makeMove called:\", { turn, username, col });\r\n    if (!gameId || turn?.toLowerCase() !== username?.toLowerCase()) return;\r\n    socket.emit(\"makeMove\", { gameId, column: col });\r\n  };\r\n\r\n  const renderCell = (cell, rowIdx, colIdx) => {\r\n    let color = \"white\";\r\n    if (cell === \"X\") color = \"red\";\r\n    if (cell === \"O\") color = \"yellow\";\r\n    return (\r\n      <div\r\n        key={`${rowIdx}-${colIdx}`}\r\n        onClick={() => makeMove(colIdx)}\r\n        style={{\r\n          width: \"50px\",\r\n          height: \"50px\",\r\n          backgroundColor: \"#1976d2\",\r\n          border: \"2px solid white\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          cursor: turn?.toLowerCase() === username.toLowerCase() ? \"pointer\" : \"not-allowed\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"80%\",\r\n            height: \"80%\",\r\n            borderRadius: \"50%\",\r\n            backgroundColor: color,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n      <h2>Connect4</h2>\r\n      <h3>\r\n        Your Turn:{\" \"}\r\n        {turn?.toLowerCase() === username.toLowerCase() ? \"‚úÖ Your Move\" : \"‚è≥ Waiting\"}\r\n      </h3>\r\n      <h4>Playing against: {opponent}</h4>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(7, 50px)\",\r\n          justifyContent: \"center\",\r\n          gap: \"4px\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        {board.map((row, rowIdx) =>\r\n          row.map((cell, colIdx) => renderCell(cell, rowIdx, colIdx))\r\n        )}\r\n      </div>\r\n      <button\r\n        onClick={() => setInGame(false)}\r\n        style={{\r\n          marginTop: \"20px\",\r\n          padding: \"10px 20px\",\r\n          backgroundColor: \"#d32f2f\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"4px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Leave Game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}