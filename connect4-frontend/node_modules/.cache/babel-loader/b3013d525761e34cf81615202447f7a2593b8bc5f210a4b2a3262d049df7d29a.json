{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\Assignment\\\\connect4-frontend2\\\\src\\\\components\\\\GameBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameBoard({\n  username,\n  gameId,\n  board: initialBoard,\n  turnProp,\n  opponentProp,\n  setInGame\n}) {\n  _s();\n  var _board$;\n  const [board, setBoard] = useState(initialBoard || []);\n  const [turn, setTurn] = useState(turnProp || \"\");\n  const [opponent, setOpponent] = useState(opponentProp || \"\");\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n  useEffect(() => {\n    // Update board on move\n    socket.on(\"moveMade\", ({\n      column,\n      row,\n      symbol,\n      board: newBoard\n    }) => {\n      setBoard(newBoard);\n    });\n\n    // Handle game over\n    socket.on(\"gameOver\", ({\n      winner,\n      draw\n    }) => {\n      setGameOver(true);\n      if (draw) {\n        setWinner(\"Draw\");\n      } else {\n        setWinner(winner);\n      }\n    });\n\n    // Opponent found if missed initially\n    socket.on(\"opponentFound\", ({\n      opponent\n    }) => {\n      setOpponent(opponent);\n    });\n\n    // Update turn switching\n    socket.on(\"turnChanged\", ({\n      nextTurn\n    }) => {\n      setTurn(nextTurn);\n    });\n\n    // On player disconnected\n    socket.on(\"playerDisconnected\", ({\n      message\n    }) => {\n      alert(message);\n    });\n\n    // On player rejoined\n    socket.on(\"playerRejoined\", ({\n      message\n    }) => {\n      console.log(message);\n    });\n    return () => {\n      socket.off(\"moveMade\");\n      socket.off(\"gameOver\");\n      socket.off(\"opponentFound\");\n      socket.off(\"turnChanged\");\n      socket.off(\"playerDisconnected\");\n      socket.off(\"playerRejoined\");\n    };\n  }, []);\n  const makeMove = column => {\n    if (!gameId || gameOver) return;\n    const isMyTurn = (turn || \"\").toLowerCase() === (username || \"\").toLowerCase();\n    if (!isMyTurn) return;\n    socket.emit(\"makeMove\", {\n      gameId,\n      column\n    });\n    setTurn(opponent); // Optimistic UI update until confirmed by server\n  };\n  const handleLeaveGame = () => {\n    setInGame(false);\n    window.location.reload(); // Hard reset for simplicity\n  };\n  const isMyTurn = (turn || \"\").toLowerCase() === (username || \"\").toLowerCase();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connect4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Turn: \", gameOver ? \"‚ùå Game Over\" : isMyTurn ? \"‚úÖ Your Move\" : \"‚è≥ Waiting\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Playing against: \", opponent || \"BotMaster\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: winner === \"Draw\" ? \"Game ended in a draw.\" : winner === username ? \"üéâ You win!\" : `üíî ${winner} wins.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${((_board$ = board[0]) === null || _board$ === void 0 ? void 0 : _board$.length) || 7}, 50px)`,\n        justifyContent: \"center\",\n        gap: \"4px\",\n        marginTop: \"20px\"\n      },\n      children: board.map((row, rowIdx) => row.map((cell, colIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          if (!gameOver && isMyTurn) makeMove(colIdx);\n        },\n        style: {\n          width: \"50px\",\n          height: \"50px\",\n          backgroundColor: cell ? cell === \"X\" ? \"red\" : \"yellow\" : \"lightgray\",\n          borderRadius: \"50%\",\n          cursor: !gameOver && isMyTurn ? \"pointer\" : \"not-allowed\",\n          border: \"2px solid black\"\n        }\n      }, `${rowIdx}-${colIdx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLeaveGame,\n      style: {\n        marginTop: \"20px\",\n        padding: \"10px 20px\"\n      },\n      children: \"Leave Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"DVO5Rffcm0Kq4mjSzS3meAkP8xY=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","socket","jsxDEV","_jsxDEV","GameBoard","username","gameId","board","initialBoard","turnProp","opponentProp","setInGame","_s","_board$","setBoard","turn","setTurn","opponent","setOpponent","gameOver","setGameOver","winner","setWinner","on","column","row","symbol","newBoard","draw","nextTurn","message","alert","console","log","off","makeMove","isMyTurn","toLowerCase","emit","handleLeaveGame","window","location","reload","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","length","justifyContent","gap","marginTop","map","rowIdx","cell","colIdx","onClick","width","height","backgroundColor","borderRadius","cursor","border","padding","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/Assignment/connect4-frontend2/src/components/GameBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport socket from \"../socket\";\r\n\r\nfunction GameBoard({\r\n  username,\r\n  gameId,\r\n  board: initialBoard,\r\n  turnProp,\r\n  opponentProp,\r\n  setInGame,\r\n}) {\r\n  const [board, setBoard] = useState(initialBoard || []);\r\n  const [turn, setTurn] = useState(turnProp || \"\");\r\n  const [opponent, setOpponent] = useState(opponentProp || \"\");\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Update board on move\r\n    socket.on(\"moveMade\", ({ column, row, symbol, board: newBoard }) => {\r\n      setBoard(newBoard);\r\n    });\r\n\r\n    // Handle game over\r\n    socket.on(\"gameOver\", ({ winner, draw }) => {\r\n      setGameOver(true);\r\n      if (draw) {\r\n        setWinner(\"Draw\");\r\n      } else {\r\n        setWinner(winner);\r\n      }\r\n    });\r\n\r\n    // Opponent found if missed initially\r\n    socket.on(\"opponentFound\", ({ opponent }) => {\r\n      setOpponent(opponent);\r\n    });\r\n\r\n    // Update turn switching\r\n    socket.on(\"turnChanged\", ({ nextTurn }) => {\r\n      setTurn(nextTurn);\r\n    });\r\n\r\n    // On player disconnected\r\n    socket.on(\"playerDisconnected\", ({ message }) => {\r\n      alert(message);\r\n    });\r\n\r\n    // On player rejoined\r\n    socket.on(\"playerRejoined\", ({ message }) => {\r\n      console.log(message);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"moveMade\");\r\n      socket.off(\"gameOver\");\r\n      socket.off(\"opponentFound\");\r\n      socket.off(\"turnChanged\");\r\n      socket.off(\"playerDisconnected\");\r\n      socket.off(\"playerRejoined\");\r\n    };\r\n  }, []);\r\n\r\n  const makeMove = (column) => {\r\n    if (!gameId || gameOver) return;\r\n    const isMyTurn =\r\n      (turn || \"\").toLowerCase() === (username || \"\").toLowerCase();\r\n\r\n    if (!isMyTurn) return;\r\n\r\n    socket.emit(\"makeMove\", { gameId, column });\r\n    setTurn(opponent); // Optimistic UI update until confirmed by server\r\n  };\r\n\r\n  const handleLeaveGame = () => {\r\n    setInGame(false);\r\n    window.location.reload(); // Hard reset for simplicity\r\n  };\r\n\r\n  const isMyTurn =\r\n    (turn || \"\").toLowerCase() === (username || \"\").toLowerCase();\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h2>Connect4</h2>\r\n      <h3>\r\n        Your Turn: {gameOver ? \"‚ùå Game Over\" : isMyTurn ? \"‚úÖ Your Move\" : \"‚è≥ Waiting\"}\r\n      </h3>\r\n      <h4>Playing against: {opponent || \"BotMaster\"}</h4>\r\n      {gameOver && (\r\n        <h3>\r\n          {winner === \"Draw\"\r\n            ? \"Game ended in a draw.\"\r\n            : winner === username\r\n            ? \"üéâ You win!\"\r\n            : `üíî ${winner} wins.`}\r\n        </h3>\r\n      )}\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: `repeat(${board[0]?.length || 7}, 50px)`,\r\n          justifyContent: \"center\",\r\n          gap: \"4px\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        {board.map((row, rowIdx) =>\r\n          row.map((cell, colIdx) => (\r\n            <div\r\n              key={`${rowIdx}-${colIdx}`}\r\n              onClick={() => {\r\n                if (!gameOver && isMyTurn) makeMove(colIdx);\r\n              }}\r\n              style={{\r\n                width: \"50px\",\r\n                height: \"50px\",\r\n                backgroundColor: cell\r\n                  ? cell === \"X\"\r\n                    ? \"red\"\r\n                    : \"yellow\"\r\n                  : \"lightgray\",\r\n                borderRadius: \"50%\",\r\n                cursor: !gameOver && isMyTurn ? \"pointer\" : \"not-allowed\",\r\n                border: \"2px solid black\",\r\n              }}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n      <button\r\n        onClick={handleLeaveGame}\r\n        style={{ marginTop: \"20px\", padding: \"10px 20px\" }}\r\n      >\r\n        Leave Game\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}