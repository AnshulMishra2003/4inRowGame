{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\Assignment\\\\connect4-frontend2\\\\src\\\\components\\\\GameBoard.jsx\",\n  _s = $RefreshSig$();\n// src/components/GameBoard.jsx\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nconst GameBoard = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const username = (state === null || state === void 0 ? void 0 : state.name) || \"Player\";\n  const [board, setBoard] = useState(Array.from({\n    length: ROWS\n  }, () => Array(COLS).fill(null)));\n  const [turn, setTurn] = useState(null);\n  const [opponent, setOpponent] = useState(\"Waiting...\");\n  const navigate = useNavigate();\n  const makeMove = col => {\n    if (turn !== username) return;\n    socket.emit(\"makeMove\", {\n      column: col\n    });\n  };\n  useEffect(() => {\n    const handleGameStarted = ({\n      board,\n      players,\n      turn\n    }) => {\n      setBoard(board);\n      setTurn(turn);\n      setOpponent(players.find(p => p !== username) || \"Bot\");\n    };\n    const handleMoveMade = ({\n      board\n    }) => {\n      setBoard([...board]);\n      setTurn(prev => prev === username ? opponent : username);\n    };\n    const handleGameOver = ({\n      winner,\n      draw\n    }) => {\n      setTimeout(() => {\n        if (draw) {\n          alert(\"Game Over: It's a Draw!\");\n        } else {\n          alert(winner === username ? \"Congratulations! You Win!\" : `${winner} Wins!`);\n        }\n        navigate(\"/\");\n      }, 300);\n    };\n    socket.on(\"gameStarted\", handleGameStarted);\n    socket.on(\"moveMade\", handleMoveMade);\n    socket.on(\"gameOver\", handleGameOver);\n    return () => {\n      socket.off(\"gameStarted\", handleGameStarted);\n      socket.off(\"moveMade\", handleMoveMade);\n      socket.off(\"gameOver\", handleGameOver);\n    };\n  }, [username, opponent, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#f0f4f8\",\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: \"28px\",\n        color: \"#0077b6\"\n      },\n      children: \"Connect4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"18px\",\n        color: \"#023e8a\"\n      },\n      children: [\"Your Turn: \", turn === username ? \"✅\" : \"❌\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"16px\"\n      },\n      children: [\"Playing against: \", opponent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${COLS}, 50px)`,\n        justifyContent: \"center\",\n        gap: \"6px\",\n        marginTop: \"20px\"\n      },\n      children: board.map((row, rIdx) => row.map((cell, cIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => makeMove(cIdx),\n        style: {\n          width: \"50px\",\n          height: \"50px\",\n          backgroundColor: cell === \"X\" ? \"#d62828\" : cell === \"O\" ? \"#fcbf49\" : \"#e0e0e0\",\n          borderRadius: \"50%\",\n          cursor: turn === username ? \"pointer\" : \"not-allowed\",\n          border: \"1px solid #555\"\n        }\n      }, `${rIdx}-${cIdx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"qFkfDwre61gt5Isqy4pXA21/Rco=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","socket","jsxDEV","_jsxDEV","ROWS","COLS","GameBoard","_s","state","username","name","board","setBoard","Array","from","length","fill","turn","setTurn","opponent","setOpponent","navigate","makeMove","col","emit","column","handleGameStarted","players","find","p","handleMoveMade","prev","handleGameOver","winner","draw","setTimeout","alert","on","off","style","textAlign","padding","backgroundColor","minHeight","children","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","justifyContent","gap","marginTop","map","row","rIdx","cell","cIdx","onClick","width","height","borderRadius","cursor","border","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/Assignment/connect4-frontend2/src/components/GameBoard.jsx"],"sourcesContent":["// src/components/GameBoard.jsx\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport socket from \"../socket\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nconst GameBoard = () => {\r\n  const { state } = useLocation();\r\n  const username = state?.name || \"Player\";\r\n  const [board, setBoard] = useState(Array.from({ length: ROWS }, () => Array(COLS).fill(null)));\r\n  const [turn, setTurn] = useState(null);\r\n  const [opponent, setOpponent] = useState(\"Waiting...\");\r\n  const navigate = useNavigate();\r\n\r\n  const makeMove = (col) => {\r\n    if (turn !== username) return;\r\n    socket.emit(\"makeMove\", { column: col });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleGameStarted = ({ board, players, turn }) => {\r\n      setBoard(board);\r\n      setTurn(turn);\r\n      setOpponent(players.find((p) => p !== username) || \"Bot\");\r\n    };\r\n\r\n    const handleMoveMade = ({ board }) => {\r\n      setBoard([...board]);\r\n      setTurn((prev) => (prev === username ? opponent : username));\r\n    };\r\n\r\n    const handleGameOver = ({ winner, draw }) => {\r\n      setTimeout(() => {\r\n        if (draw) {\r\n          alert(\"Game Over: It's a Draw!\");\r\n        } else {\r\n          alert(winner === username ? \"Congratulations! You Win!\" : `${winner} Wins!`);\r\n        }\r\n        navigate(\"/\");\r\n      }, 300);\r\n    };\r\n\r\n    socket.on(\"gameStarted\", handleGameStarted);\r\n    socket.on(\"moveMade\", handleMoveMade);\r\n    socket.on(\"gameOver\", handleGameOver);\r\n\r\n    return () => {\r\n      socket.off(\"gameStarted\", handleGameStarted);\r\n      socket.off(\"moveMade\", handleMoveMade);\r\n      socket.off(\"gameOver\", handleGameOver);\r\n    };\r\n  }, [username, opponent, navigate]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"center\",\r\n        padding: \"20px\",\r\n        backgroundColor: \"#f0f4f8\",\r\n        minHeight: \"100vh\",\r\n      }}\r\n    >\r\n      <h2 style={{ fontSize: \"28px\", color: \"#0077b6\" }}>Connect4</h2>\r\n      <p style={{ fontSize: \"18px\", color: \"#023e8a\" }}>Your Turn: {turn === username ? \"✅\" : \"❌\"}</p>\r\n      <p style={{ fontSize: \"16px\" }}>Playing against: {opponent}</p>\r\n\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: `repeat(${COLS}, 50px)`,\r\n          justifyContent: \"center\",\r\n          gap: \"6px\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        {board.map((row, rIdx) =>\r\n          row.map((cell, cIdx) => (\r\n            <div\r\n              key={`${rIdx}-${cIdx}`}\r\n              onClick={() => makeMove(cIdx)}\r\n              style={{\r\n                width: \"50px\",\r\n                height: \"50px\",\r\n                backgroundColor:\r\n                  cell === \"X\" ? \"#d62828\" : cell === \"O\" ? \"#fcbf49\" : \"#e0e0e0\",\r\n                borderRadius: \"50%\",\r\n                cursor: turn === username ? \"pointer\" : \"not-allowed\",\r\n                border: \"1px solid #555\",\r\n              }}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}