{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\Assignment\\\\connect4-frontend2\\\\src\\\\components\\\\GameBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nconst GameBoard = () => {\n  _s();\n  const location = useLocation();\n  const {\n    gameId\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Get data from navigation state\n  const {\n    username,\n    opponent,\n    turn: initialTurn\n  } = location.state || {};\n  const [board, setBoard] = useState(Array.from({\n    length: ROWS\n  }, () => Array(COLS).fill(null)));\n  const [turn, setTurn] = useState(initialTurn || username);\n\n  // If no state data, redirect back to lobby\n  useEffect(() => {\n    if (!username || !gameId) {\n      navigate(\"/play\");\n      return;\n    }\n  }, [username, gameId, navigate]);\n  const makeMove = col => {\n    if (turn !== username) return;\n    socket.emit(\"makeMove\", {\n      gameId,\n      column: col\n    });\n  };\n  useEffect(() => {\n    console.log(\"🔁 GameBoard mounted. Username:\", username, \"Opponent:\", opponent, \"Turn:\", turn);\n    socket.on(\"moveMade\", ({\n      board\n    }) => {\n      setBoard([...board]);\n\n      // Switch turn locally\n      setTurn(prev => prev === username ? opponent : username);\n    });\n    socket.on(\"gameOver\", ({\n      winner,\n      draw\n    }) => {\n      if (draw) {\n        alert(\"It's a Draw!\");\n      } else {\n        alert(winner === username ? \"You Win!\" : `${winner} Wins`);\n      }\n      setInGame(false);\n    });\n    socket.on(\"playerDisconnected\", ({\n      message\n    }) => alert(message));\n    socket.on(\"playerRejoined\", ({\n      message\n    }) => alert(message));\n    return () => {\n      socket.off(\"moveMade\");\n      socket.off(\"gameOver\");\n      socket.off(\"playerDisconnected\");\n      socket.off(\"playerRejoined\");\n    };\n  }, [username, opponent, setInGame]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"40px\",\n      backgroundColor: \"#f0f4f8\",\n      minHeight: \"100vh\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: \"32px\",\n        color: \"#0077b6\",\n        marginBottom: \"10px\"\n      },\n      children: \"4 in a Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: \"20px\",\n        margin: \"5px 0\"\n      },\n      children: [\"Turn: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#023e8a\"\n        },\n        children: turn || \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        fontSize: \"18px\",\n        margin: \"5px 0\"\n      },\n      children: [\"Opponent: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#023e8a\"\n        },\n        children: opponent || \"Waiting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${COLS}, 60px)`,\n        // ✅ fixed template literal\n        justifyContent: \"center\",\n        gap: \"8px\",\n        backgroundColor: \"#caf0f8\",\n        padding: \"20px\",\n        borderRadius: \"12px\",\n        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\n        marginTop: \"20px\"\n      },\n      children: board.map((row, rIdx) => row.map((cell, cIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        // ✅ fixed template literal\n        onClick: () => makeMove(cIdx),\n        style: {\n          width: \"60px\",\n          height: \"60px\",\n          backgroundColor: cell === \"X\" ? \"#d62828\" : cell === \"O\" ? \"#fcbf49\" : \"#e0e0e0\",\n          border: \"2px solid #333\",\n          borderRadius: \"50%\",\n          cursor: turn === username ? \"pointer\" : \"not-allowed\",\n          transition: \"transform 0.2s\"\n        },\n        onMouseOver: e => {\n          if (turn === username) e.currentTarget.style.transform = \"scale(1.1)\";\n        },\n        onMouseOut: e => {\n          e.currentTarget.style.transform = \"scale(1)\";\n        }\n      }, `${rIdx}-${cIdx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"a14bdeSJ6YvoNtAe1VMQvw2oK2s=\", false, function () {\n  return [useLocation, useParams, useNavigate];\n});\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useParams","useNavigate","socket","jsxDEV","_jsxDEV","ROWS","COLS","GameBoard","_s","location","gameId","navigate","username","opponent","turn","initialTurn","state","board","setBoard","Array","from","length","fill","setTurn","makeMove","col","emit","column","console","log","on","prev","winner","draw","alert","setInGame","message","off","style","textAlign","marginTop","backgroundColor","minHeight","padding","children","fontSize","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","margin","display","gridTemplateColumns","justifyContent","gap","borderRadius","boxShadow","map","row","rIdx","cell","cIdx","onClick","width","height","border","cursor","transition","onMouseOver","e","currentTarget","transform","onMouseOut","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/Assignment/connect4-frontend2/src/components/GameBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\r\nimport socket from \"../socket\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nconst GameBoard = () => {\r\n  const location = useLocation();\r\n  const { gameId } = useParams();\r\n  const navigate = useNavigate();\r\n  \r\n  // Get data from navigation state\r\n  const { username, opponent, turn: initialTurn } = location.state || {};\r\n  \r\n  const [board, setBoard] = useState(Array.from({ length: ROWS }, () => Array(COLS).fill(null)));\r\n  const [turn, setTurn] = useState(initialTurn || username);\r\n  \r\n  // If no state data, redirect back to lobby\r\n  useEffect(() => {\r\n    if (!username || !gameId) {\r\n      navigate(\"/play\");\r\n      return;\r\n    }\r\n  }, [username, gameId, navigate]);\r\n\r\n  const makeMove = (col) => {\r\n    if (turn !== username) return;\r\n    socket.emit(\"makeMove\", { gameId, column: col });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"🔁 GameBoard mounted. Username:\", username, \"Opponent:\", opponent, \"Turn:\", turn);\r\n\r\n    socket.on(\"moveMade\", ({ board }) => {\r\n      setBoard([...board]);\r\n\r\n      // Switch turn locally\r\n      setTurn(prev => (prev === username ? opponent : username));\r\n    });\r\n\r\n    socket.on(\"gameOver\", ({ winner, draw }) => {\r\n      if (draw) {\r\n        alert(\"It's a Draw!\");\r\n      } else {\r\n        alert(winner === username ? \"You Win!\" : `${winner} Wins`);\r\n      }\r\n      setInGame(false);\r\n    });\r\n\r\n    socket.on(\"playerDisconnected\", ({ message }) => alert(message));\r\n    socket.on(\"playerRejoined\", ({ message }) => alert(message));\r\n\r\n    return () => {\r\n      socket.off(\"moveMade\");\r\n      socket.off(\"gameOver\");\r\n      socket.off(\"playerDisconnected\");\r\n      socket.off(\"playerRejoined\");\r\n    };\r\n  }, [username, opponent, setInGame]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"center\",\r\n        marginTop: \"40px\",\r\n        backgroundColor: \"#f0f4f8\",\r\n        minHeight: \"100vh\",\r\n        padding: \"20px\"\r\n      }}\r\n    >\r\n      <h2 style={{ fontSize: \"32px\", color: \"#0077b6\", marginBottom: \"10px\" }}>4 in a Row</h2>\r\n      <h3 style={{ fontSize: \"20px\", margin: \"5px 0\" }}>\r\n        Turn: <span style={{ color: \"#023e8a\" }}>{turn || \"Loading...\"}</span>\r\n      </h3>\r\n      <h4 style={{ fontSize: \"18px\", margin: \"5px 0\" }}>\r\n        Opponent: <span style={{ color: \"#023e8a\" }}>{opponent || \"Waiting...\"}</span>\r\n      </h4>\r\n\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: `repeat(${COLS}, 60px)`, // ✅ fixed template literal\r\n          justifyContent: \"center\",\r\n          gap: \"8px\",\r\n          backgroundColor: \"#caf0f8\",\r\n          padding: \"20px\",\r\n          borderRadius: \"12px\",\r\n          boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\r\n          marginTop: \"20px\"\r\n        }}\r\n      >\r\n        {board.map((row, rIdx) =>\r\n          row.map((cell, cIdx) => (\r\n            <div\r\n              key={`${rIdx}-${cIdx}`} // ✅ fixed template literal\r\n              onClick={() => makeMove(cIdx)}\r\n              style={{\r\n                width: \"60px\",\r\n                height: \"60px\",\r\n                backgroundColor:\r\n                  cell === \"X\" ? \"#d62828\" : cell === \"O\" ? \"#fcbf49\" : \"#e0e0e0\",\r\n                border: \"2px solid #333\",\r\n                borderRadius: \"50%\",\r\n                cursor: turn === username ? \"pointer\" : \"not-allowed\",\r\n                transition: \"transform 0.2s\",\r\n              }}\r\n              onMouseOver={(e) => {\r\n                if (turn === username) e.currentTarget.style.transform = \"scale(1.1)\";\r\n              }}\r\n              onMouseOut={(e) => {\r\n                e.currentTarget.style.transform = \"scale(1)\";\r\n              }}\r\n            ></div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}