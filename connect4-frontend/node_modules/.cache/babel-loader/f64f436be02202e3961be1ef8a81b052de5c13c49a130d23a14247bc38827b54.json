{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\Assignment\\\\connect4-frontend\\\\src\\\\components\\\\GameBoard.jsx\",\n  _s = $RefreshSig$();\n// src/components/GameBoard.jsx\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nconst GameBoard = ({\n  username,\n  gameId,\n  setInGame\n}) => {\n  _s();\n  const [board, setBoard] = useState(Array.from({\n    length: ROWS\n  }, () => Array(COLS).fill(null)));\n  const [turn, setTurn] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const makeMove = col => {\n    if (turn !== username) return;\n    socket.emit(\"makeMove\", {\n      gameId,\n      column: col\n    });\n  };\n  useEffect(() => {\n    socket.on(\"connect\", () => console.log(\"âœ… Socket connected\"));\n    socket.on(\"gameStarted\", ({\n      board,\n      turn,\n      players\n    }) => {\n      console.log(\"ðŸŽ® gameStarted payload:\", {\n        board,\n        turn,\n        players\n      });\n      console.log(\"ðŸ§‘ current username:\", username);\n      setBoard(board);\n      setTurn(turn);\n      const opp = players.find(p => p !== username);\n      setOpponent(opp || \"BotMaster\");\n    });\n    socket.on(\"opponentFound\", ({\n      opponent\n    }) => {\n      setOpponent(opponent);\n    });\n    socket.on(\"moveMade\", ({\n      board\n    }) => {\n      setBoard([...board]);\n    });\n    socket.on(\"turnChange\", ({\n      turn\n    }) => {\n      setTurn(turn);\n    });\n    socket.on(\"gameOver\", ({\n      winner,\n      draw\n    }) => {\n      if (draw) {\n        alert(\"It's a Draw!\");\n      } else {\n        alert(winner === username ? \"You Win!\" : `${winner} Wins`);\n      }\n      setInGame(false);\n    });\n    socket.on(\"playerDisconnected\", ({\n      message\n    }) => alert(message));\n    socket.on(\"playerRejoined\", ({\n      message\n    }) => alert(message));\n    return () => {\n      socket.off(\"gameStarted\");\n      socket.off(\"moveMade\");\n      socket.off(\"turnChange\");\n      socket.off(\"gameOver\");\n      socket.off(\"opponentFound\");\n      socket.off(\"playerDisconnected\");\n      socket.off(\"playerRejoined\");\n    };\n  }, [username, setInGame]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"4 in a Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Turn: \", turn || \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Opponent: \", opponent || \"Waiting...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${COLS}, 50px)`,\n        justifyContent: \"center\",\n        gap: \"5px\"\n      },\n      children: board.map((row, rIdx) => row.map((cell, cIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => makeMove(cIdx),\n        style: {\n          width: 50,\n          height: 50,\n          backgroundColor: cell === \"X\" ? \"red\" : cell === \"O\" ? \"yellow\" : \"#eee\",\n          border: \"1px solid #333\",\n          borderRadius: \"50%\",\n          cursor: turn === username ? \"pointer\" : \"not-allowed\"\n        }\n      }, `${rIdx}-${cIdx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"TYE2Fck7xzXK+0c7wG1xoBviX/k=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useEffect","useState","socket","jsxDEV","_jsxDEV","ROWS","COLS","GameBoard","username","gameId","setInGame","_s","board","setBoard","Array","from","length","fill","turn","setTurn","opponent","setOpponent","makeMove","col","emit","column","on","console","log","players","opp","find","p","winner","draw","alert","message","off","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","justifyContent","gap","map","row","rIdx","cell","cIdx","onClick","width","height","backgroundColor","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/Assignment/connect4-frontend/src/components/GameBoard.jsx"],"sourcesContent":["// src/components/GameBoard.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport socket from \"../socket\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nconst GameBoard = ({ username, gameId, setInGame }) => {\r\n  const [board, setBoard] = useState(Array.from({ length: ROWS }, () => Array(COLS).fill(null)));\r\n  const [turn, setTurn] = useState(null);\r\n  const [opponent, setOpponent] = useState(null);\r\n\r\n  const makeMove = (col) => {\r\n    if (turn !== username) return;\r\n    socket.emit(\"makeMove\", { gameId, column: col });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect\", () => console.log(\"âœ… Socket connected\"));\r\n    socket.on(\"gameStarted\", ({ board, turn, players }) => {\r\n      console.log(\"ðŸŽ® gameStarted payload:\", { board, turn, players });\r\n      console.log(\"ðŸ§‘ current username:\", username);\r\n      setBoard(board);\r\n      setTurn(turn);\r\n\r\n      const opp = players.find((p) => p !== username);\r\n      setOpponent(opp || \"BotMaster\");\r\n    });\r\n\r\n    socket.on(\"opponentFound\", ({ opponent }) => {\r\n      setOpponent(opponent);\r\n    });\r\n\r\n    socket.on(\"moveMade\", ({ board }) => {\r\n      setBoard([...board]);\r\n    });\r\n\r\n    socket.on(\"turnChange\", ({ turn }) => {\r\n      setTurn(turn);\r\n    });\r\n\r\n    socket.on(\"gameOver\", ({ winner, draw }) => {\r\n      if (draw) {\r\n        alert(\"It's a Draw!\");\r\n      } else {\r\n        alert(winner === username ? \"You Win!\" : `${winner} Wins`);\r\n      }\r\n      setInGame(false);\r\n    });\r\n\r\n    socket.on(\"playerDisconnected\", ({ message }) => alert(message));\r\n    socket.on(\"playerRejoined\", ({ message }) => alert(message));\r\n\r\n    return () => {\r\n      socket.off(\"gameStarted\");\r\n      socket.off(\"moveMade\");\r\n      socket.off(\"turnChange\");\r\n      socket.off(\"gameOver\");\r\n      socket.off(\"opponentFound\");\r\n      socket.off(\"playerDisconnected\");\r\n      socket.off(\"playerRejoined\");\r\n    };\r\n  }, [username, setInGame]);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n      <h2>4 in a Row</h2>\r\n      <h3>Turn: {turn || \"Loading...\"}</h3>\r\n      <h4>Opponent: {opponent || \"Waiting...\"}</h4>\r\n\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: `repeat(${COLS}, 50px)`,\r\n          justifyContent: \"center\",\r\n          gap: \"5px\",\r\n        }}\r\n      >\r\n        {board.map((row, rIdx) =>\r\n          row.map((cell, cIdx) => (\r\n            <div\r\n              key={`${rIdx}-${cIdx}`}\r\n              onClick={() => makeMove(cIdx)}\r\n              style={{\r\n                width: 50,\r\n                height: 50,\r\n                backgroundColor:\r\n                  cell === \"X\" ? \"red\" : cell === \"O\" ? \"yellow\" : \"#eee\",\r\n                border: \"1px solid #333\",\r\n                borderRadius: \"50%\",\r\n                cursor: turn === username ? \"pointer\" : \"not-allowed\",\r\n              }}\r\n            ></div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}