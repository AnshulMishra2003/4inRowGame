{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\Assignment\\\\connect4-frontend\\\\src\\\\components\\\\GameBoard.jsx\",\n  _s = $RefreshSig$();\n// src/components/GameBoard.jsx\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nconst GameBoard = ({\n  username,\n  gameId,\n  setInGame\n}) => {\n  _s();\n  const [board, setBoard] = useState(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\n  const [turn, setTurn] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const makeMove = col => {\n    if (turn !== username) return;\n    socket.emit(\"makeMove\", {\n      gameId,\n      column: col\n    });\n  };\n  useEffect(() => {\n    socket.on(\"updateBoard\", ({\n      board,\n      turn\n    }) => {\n      setBoard(board);\n      setTurn(turn);\n    });\n    socket.on(\"gameStarted\", ({\n      gameId,\n      turn\n    }) => {\n      setTurn(turn);\n    });\n    socket.on(\"opponentFound\", ({\n      opponent\n    }) => {\n      setOpponent(opponent);\n    });\n    socket.on(\"gameOver\", ({\n      winner\n    }) => {\n      alert(winner === username ? \"You Win!\" : `${winner} Wins`);\n      setInGame(false);\n    });\n    return () => {\n      socket.off(\"updateBoard\");\n      socket.off(\"gameStarted\");\n      socket.off(\"opponentFound\");\n      socket.off(\"gameOver\");\n    };\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Turn: \", turn || \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Opponent: \", opponent || \"Waiting...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${COLS}, 50px)`,\n        justifyContent: \"center\",\n        gap: \"5px\"\n      },\n      children: board.map((row, rIdx) => row.map((cell, cIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => makeMove(cIdx),\n        style: {\n          width: 50,\n          height: 50,\n          backgroundColor: cell === username ? \"red\" : cell ? \"yellow\" : \"#eee\",\n          border: \"1px solid #333\",\n          borderRadius: \"50%\",\n          cursor: \"pointer\"\n        }\n      }, `${rIdx}-${cIdx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"oChSC/sz5MM4z4Rq4UbE/32HA0M=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useEffect","useState","socket","jsxDEV","_jsxDEV","ROWS","COLS","GameBoard","username","gameId","setInGame","_s","board","setBoard","Array","fill","map","turn","setTurn","opponent","setOpponent","makeMove","col","emit","column","on","winner","alert","off","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","justifyContent","gap","row","rIdx","cell","cIdx","onClick","width","height","backgroundColor","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/Assignment/connect4-frontend/src/components/GameBoard.jsx"],"sourcesContent":["// src/components/GameBoard.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport socket from \"../socket\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nconst GameBoard = ({ username, gameId, setInGame }) => {\r\n  const [board, setBoard] = useState(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\r\n  const [turn, setTurn] = useState(null);\r\n  const [opponent, setOpponent] = useState(null);\r\n\r\n  const makeMove = (col) => {\r\n    if (turn !== username) return;\r\n    socket.emit(\"makeMove\", { gameId, column: col });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"updateBoard\", ({ board, turn }) => {\r\n      setBoard(board);\r\n      setTurn(turn);\r\n    });\r\n\r\n    socket.on(\"gameStarted\", ({ gameId, turn }) => {\r\n      setTurn(turn);\r\n    });\r\n\r\n    socket.on(\"opponentFound\", ({ opponent }) => {\r\n      setOpponent(opponent);\r\n    });\r\n\r\n    socket.on(\"gameOver\", ({ winner }) => {\r\n      alert(winner === username ? \"You Win!\" : `${winner} Wins`);\r\n      setInGame(false);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"updateBoard\");\r\n      socket.off(\"gameStarted\");\r\n      socket.off(\"opponentFound\");\r\n      socket.off(\"gameOver\");\r\n    };\r\n  }, [username]);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h3>Turn: {turn || \"Loading...\"}</h3>\r\n      <h4>Opponent: {opponent || \"Waiting...\"}</h4>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: `repeat(${COLS}, 50px)`,\r\n          justifyContent: \"center\",\r\n          gap: \"5px\",\r\n        }}\r\n      >\r\n        {board.map((row, rIdx) =>\r\n          row.map((cell, cIdx) => (\r\n            <div\r\n              key={`${rIdx}-${cIdx}`}\r\n              onClick={() => makeMove(cIdx)}\r\n              style={{\r\n                width: 50,\r\n                height: 50,\r\n                backgroundColor: cell === username\r\n                  ? \"red\"\r\n                  : cell\r\n                  ? \"yellow\"\r\n                  : \"#eee\",\r\n                border: \"1px solid #333\",\r\n                borderRadius: \"50%\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            ></div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}