{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\Assignment\\\\connect4-frontend2\\\\src\\\\components\\\\GameBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"../socket\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nconst GameBoard = ({\n  username,\n  gameId,\n  board: initialBoard,\n  turnProp,\n  opponentProp,\n  setInGame\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [board, setBoard] = useState(initialBoard || Array.from({\n    length: ROWS\n  }, () => Array(COLS).fill(null)));\n  const [turn, setTurn] = useState(turnProp || null);\n  const [opponent, setOpponent] = useState(opponentProp || \"Waiting...\");\n  const makeMove = col => {\n    if (!gameId || turn !== username) return;\n    socket.emit(\"makeMove\", {\n      gameId,\n      column: col\n    });\n  };\n  useEffect(() => {\n    setBoard(initialBoard || Array.from({\n      length: ROWS\n    }, () => Array(COLS).fill(null)));\n    setTurn(turnProp);\n    setOpponent(opponentProp || \"BotMaster\");\n  }, [initialBoard, turnProp, opponentProp]);\n  useEffect(() => {\n    const handleMoveMade = ({\n      board\n    }) => {\n      setBoard([...board]);\n      setTurn(prevTurn => prevTurn === username ? opponent : username);\n    };\n    const handleGameOver = ({\n      winner,\n      draw\n    }) => {\n      setTimeout(() => {\n        if (draw) {\n          alert(\"ü§ù It's a draw!\");\n        } else if (winner === username) {\n          alert(\"üèÜ You win!\");\n        } else {\n          alert(`üòû ${winner} wins.`);\n        }\n        setInGame(false);\n        navigate(\"/\");\n      }, 300);\n    };\n    socket.on(\"moveMade\", handleMoveMade);\n    socket.on(\"gameOver\", handleGameOver);\n    return () => {\n      socket.off(\"moveMade\", handleMoveMade);\n      socket.off(\"gameOver\", handleGameOver);\n    };\n  }, [username, opponent, navigate, setInGame]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      backgroundColor: \"#0b1d1f\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: \"40px 20px\",\n      color: \"#ffffff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: \"32px\",\n        marginBottom: \"10px\"\n      },\n      children: \"Connect4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: \"18px\",\n        marginBottom: \"5px\"\n      },\n      children: [\"Your Turn:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#6ee7b7\",\n          fontWeight: \"bold\"\n        },\n        children: turn === username ? \"‚úÖ Your Move\" : \"‚è≥ Waiting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        fontSize: \"16px\",\n        marginBottom: \"20px\"\n      },\n      children: [\"Playing against: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#6ee7b7\"\n        },\n        children: opponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${COLS}, 60px)`,\n        gap: \"6px\",\n        backgroundColor: \"#122c2f\",\n        padding: \"20px\",\n        borderRadius: \"12px\"\n      },\n      children: board.map((row, rIdx) => row.map((cell, cIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => makeMove(cIdx),\n        style: {\n          width: \"60px\",\n          height: \"60px\",\n          backgroundColor: cell === \"X\" ? \"#d62828\" : cell === \"O\" ? \"#fcbf49\" : \"#1e3d3f\",\n          borderRadius: \"50%\",\n          cursor: turn === username ? \"pointer\" : \"not-allowed\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: cell && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"24px\",\n            color: \"#ffffff\",\n            fontWeight: \"bold\"\n          },\n          children: cell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)\n      }, `${rIdx}-${cIdx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"2KI9A2dRmh/5graMvlkIH0qf9Zk=\", false, function () {\n  return [useNavigate];\n});\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useEffect","useState","socket","useNavigate","jsxDEV","_jsxDEV","ROWS","COLS","GameBoard","username","gameId","board","initialBoard","turnProp","opponentProp","setInGame","_s","navigate","setBoard","Array","from","length","fill","turn","setTurn","opponent","setOpponent","makeMove","col","emit","column","handleMoveMade","prevTurn","handleGameOver","winner","draw","setTimeout","alert","on","off","style","minHeight","backgroundColor","display","flexDirection","alignItems","padding","color","children","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","gridTemplateColumns","gap","borderRadius","map","row","rIdx","cell","cIdx","onClick","width","height","cursor","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/Assignment/connect4-frontend2/src/components/GameBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport socket from \"../socket\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nconst GameBoard = ({\r\n  username,\r\n  gameId,\r\n  board: initialBoard,\r\n  turnProp,\r\n  opponentProp,\r\n  setInGame,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [board, setBoard] = useState(initialBoard || Array.from({ length: ROWS }, () => Array(COLS).fill(null)));\r\n  const [turn, setTurn] = useState(turnProp || null);\r\n  const [opponent, setOpponent] = useState(opponentProp || \"Waiting...\");\r\n\r\n  const makeMove = (col) => {\r\n    if (!gameId || turn !== username) return;\r\n    socket.emit(\"makeMove\", { gameId, column: col });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setBoard(initialBoard || Array.from({ length: ROWS }, () => Array(COLS).fill(null)));\r\n    setTurn(turnProp);\r\n    setOpponent(opponentProp || \"BotMaster\");\r\n  }, [initialBoard, turnProp, opponentProp]);\r\n\r\n  useEffect(() => {\r\n    const handleMoveMade = ({ board }) => {\r\n      setBoard([...board]);\r\n      setTurn((prevTurn) => (prevTurn === username ? opponent : username));\r\n    };\r\n\r\n    const handleGameOver = ({ winner, draw }) => {\r\n      setTimeout(() => {\r\n        if (draw) {\r\n          alert(\"ü§ù It's a draw!\");\r\n        } else if (winner === username) {\r\n          alert(\"üèÜ You win!\");\r\n        } else {\r\n          alert(`üòû ${winner} wins.`);\r\n        }\r\n        setInGame(false);\r\n        navigate(\"/\");\r\n      }, 300);\r\n    };\r\n\r\n    socket.on(\"moveMade\", handleMoveMade);\r\n    socket.on(\"gameOver\", handleGameOver);\r\n\r\n    return () => {\r\n      socket.off(\"moveMade\", handleMoveMade);\r\n      socket.off(\"gameOver\", handleGameOver);\r\n    };\r\n  }, [username, opponent, navigate, setInGame]);\r\n\r\n  return (\r\n    <div style={{\r\n      minHeight: \"100vh\",\r\n      backgroundColor: \"#0b1d1f\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      padding: \"40px 20px\",\r\n      color: \"#ffffff\",\r\n    }}>\r\n      <h1 style={{ fontSize: \"32px\", marginBottom: \"10px\" }}>Connect4</h1>\r\n      <h3 style={{ fontSize: \"18px\", marginBottom: \"5px\" }}>\r\n        Your Turn:{\" \"}\r\n        <span style={{ color: \"#6ee7b7\", fontWeight: \"bold\" }}>\r\n          {turn === username ? \"‚úÖ Your Move\" : \"‚è≥ Waiting\"}\r\n        </span>\r\n      </h3>\r\n      <h4 style={{ fontSize: \"16px\", marginBottom: \"20px\" }}>\r\n        Playing against: <span style={{ color: \"#6ee7b7\" }}>{opponent}</span>\r\n      </h4>\r\n\r\n      <div style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: `repeat(${COLS}, 60px)`,\r\n        gap: \"6px\",\r\n        backgroundColor: \"#122c2f\",\r\n        padding: \"20px\",\r\n        borderRadius: \"12px\",\r\n      }}>\r\n        {board.map((row, rIdx) =>\r\n          row.map((cell, cIdx) => (\r\n            <div\r\n              key={`${rIdx}-${cIdx}`}\r\n              onClick={() => makeMove(cIdx)}\r\n              style={{\r\n                width: \"60px\",\r\n                height: \"60px\",\r\n                backgroundColor: cell === \"X\" ? \"#d62828\" :\r\n                  cell === \"O\" ? \"#fcbf49\" : \"#1e3d3f\",\r\n                borderRadius: \"50%\",\r\n                cursor: turn === username ? \"pointer\" : \"not-allowed\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {cell && (\r\n                <span style={{\r\n                  fontSize: \"24px\",\r\n                  color: \"#ffffff\",\r\n                  fontWeight: \"bold\",\r\n                }}>\r\n                  {cell}\r\n                </span>\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}