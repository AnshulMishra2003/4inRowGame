{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\Assignment\\\\connect4-frontend2\\\\src\\\\components\\\\GameBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"../socket\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nconst GameBoard = ({\n  username,\n  setInGame\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [board, setBoard] = useState(Array.from({\n    length: ROWS\n  }, () => Array(COLS).fill(null)));\n  const [gameId, setGameId] = useState(null);\n  const [turn, setTurn] = useState(null);\n  const [opponent, setOpponent] = useState(\"Waiting...\");\n  const makeMove = col => {\n    if (turn !== username || !gameId) return;\n    socket.emit(\"makeMove\", {\n      gameId,\n      column: col\n    });\n  };\n  useEffect(() => {\n    const handleGameStarted = ({\n      gameId,\n      board,\n      turn,\n      players\n    }) => {\n      setGameId(gameId);\n      setBoard(board);\n      setTurn(turn);\n      const opp = players.find(p => p !== username);\n      setOpponent(opp || \"BotMaster\");\n    };\n    const handleOpponentFound = ({\n      opponent\n    }) => {\n      setOpponent(opponent || \"BotMaster\");\n    };\n    const handleMoveMade = ({\n      board,\n      symbol\n    }) => {\n      setBoard([...board]);\n      setTurn(prevTurn => prevTurn === username ? opponent : username);\n    };\n    const handleGameOver = ({\n      winner,\n      draw\n    }) => {\n      setTimeout(() => {\n        if (draw) {\n          alert(\"ü§ù It's a draw!\");\n        } else {\n          alert(winner === username ? \"üèÜ You win!\" : `üòû ${winner} wins.`);\n        }\n        setInGame(false);\n        navigate(\"/\");\n      }, 300);\n    };\n    socket.on(\"gameStarted\", handleGameStarted);\n    socket.on(\"opponentFound\", handleOpponentFound);\n    socket.on(\"moveMade\", handleMoveMade);\n    socket.on(\"gameOver\", handleGameOver);\n    return () => {\n      socket.off(\"gameStarted\", handleGameStarted);\n      socket.off(\"opponentFound\", handleOpponentFound);\n      socket.off(\"moveMade\", handleMoveMade);\n      socket.off(\"gameOver\", handleGameOver);\n    };\n  }, [username, opponent, navigate, setInGame]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      backgroundColor: \"#0b1d1f\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: \"40px 20px\",\n      color: \"#ffffff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: \"32px\",\n        marginBottom: \"10px\"\n      },\n      children: \"Connect4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: \"18px\",\n        marginBottom: \"5px\"\n      },\n      children: [\"Your Turn:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#6ee7b7\",\n          fontWeight: \"bold\"\n        },\n        children: turn === username ? \"‚úÖ Your Move\" : \"‚è≥ Waiting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        fontSize: \"16px\",\n        marginBottom: \"20px\"\n      },\n      children: [\"Playing against: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#6ee7b7\"\n        },\n        children: opponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${COLS}, 60px)`,\n        gap: \"6px\",\n        backgroundColor: \"#122c2f\",\n        padding: \"20px\",\n        borderRadius: \"12px\"\n      },\n      children: board.map((row, rIdx) => row.map((cell, cIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => makeMove(cIdx),\n        style: {\n          width: \"60px\",\n          height: \"60px\",\n          backgroundColor: cell === \"X\" ? \"#d62828\" : cell === \"O\" ? \"#fcbf49\" : \"#1e3d3f\",\n          borderRadius: \"50%\",\n          cursor: turn === username ? \"pointer\" : \"not-allowed\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: cell && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"24px\",\n            color: \"#ffffff\",\n            fontWeight: \"bold\"\n          },\n          children: cell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)\n      }, `${rIdx}-${cIdx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"mOiJbJx+ThJQX8jmr47pPvYWpHE=\", false, function () {\n  return [useNavigate];\n});\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useEffect","useState","socket","useNavigate","jsxDEV","_jsxDEV","ROWS","COLS","GameBoard","username","setInGame","_s","navigate","board","setBoard","Array","from","length","fill","gameId","setGameId","turn","setTurn","opponent","setOpponent","makeMove","col","emit","column","handleGameStarted","players","opp","find","p","handleOpponentFound","handleMoveMade","symbol","prevTurn","handleGameOver","winner","draw","setTimeout","alert","on","off","style","minHeight","backgroundColor","display","flexDirection","alignItems","padding","color","children","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","gridTemplateColumns","gap","borderRadius","map","row","rIdx","cell","cIdx","onClick","width","height","cursor","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/Assignment/connect4-frontend2/src/components/GameBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport socket from \"../socket\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nconst GameBoard = ({ username, setInGame }) => {\r\n  const navigate = useNavigate();\r\n  const [board, setBoard] = useState(Array.from({ length: ROWS }, () => Array(COLS).fill(null)));\r\n  const [gameId, setGameId] = useState(null);\r\n  const [turn, setTurn] = useState(null);\r\n  const [opponent, setOpponent] = useState(\"Waiting...\");\r\n\r\n  const makeMove = (col) => {\r\n    if (turn !== username || !gameId) return;\r\n    socket.emit(\"makeMove\", { gameId, column: col });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleGameStarted = ({ gameId, board, turn, players }) => {\r\n      setGameId(gameId);\r\n      setBoard(board);\r\n      setTurn(turn);\r\n      const opp = players.find((p) => p !== username);\r\n      setOpponent(opp || \"BotMaster\");\r\n    };\r\n\r\n    const handleOpponentFound = ({ opponent }) => {\r\n      setOpponent(opponent || \"BotMaster\");\r\n    };\r\n\r\n    const handleMoveMade = ({ board, symbol }) => {\r\n      setBoard([...board]);\r\n      setTurn((prevTurn) => (prevTurn === username ? opponent : username));\r\n    };\r\n\r\n    const handleGameOver = ({ winner, draw }) => {\r\n      setTimeout(() => {\r\n        if (draw) {\r\n          alert(\"ü§ù It's a draw!\");\r\n        } else {\r\n          alert(winner === username ? \"üèÜ You win!\" : `üòû ${winner} wins.`);\r\n        }\r\n        setInGame(false);\r\n        navigate(\"/\");\r\n      }, 300);\r\n    };\r\n\r\n    socket.on(\"gameStarted\", handleGameStarted);\r\n    socket.on(\"opponentFound\", handleOpponentFound);\r\n    socket.on(\"moveMade\", handleMoveMade);\r\n    socket.on(\"gameOver\", handleGameOver);\r\n\r\n    return () => {\r\n      socket.off(\"gameStarted\", handleGameStarted);\r\n      socket.off(\"opponentFound\", handleOpponentFound);\r\n      socket.off(\"moveMade\", handleMoveMade);\r\n      socket.off(\"gameOver\", handleGameOver);\r\n    };\r\n  }, [username, opponent, navigate, setInGame]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: \"100vh\",\r\n        backgroundColor: \"#0b1d1f\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: \"40px 20px\",\r\n        color: \"#ffffff\",\r\n      }}\r\n    >\r\n      <h1 style={{ fontSize: \"32px\", marginBottom: \"10px\" }}>Connect4</h1>\r\n      <h3 style={{ fontSize: \"18px\", marginBottom: \"5px\" }}>\r\n        Your Turn:{\" \"}\r\n        <span style={{ color: \"#6ee7b7\", fontWeight: \"bold\" }}>\r\n          {turn === username ? \"‚úÖ Your Move\" : \"‚è≥ Waiting\"}\r\n        </span>\r\n      </h3>\r\n      <h4 style={{ fontSize: \"16px\", marginBottom: \"20px\" }}>\r\n        Playing against: <span style={{ color: \"#6ee7b7\" }}>{opponent}</span>\r\n      </h4>\r\n\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: `repeat(${COLS}, 60px)`,\r\n          gap: \"6px\",\r\n          backgroundColor: \"#122c2f\",\r\n          padding: \"20px\",\r\n          borderRadius: \"12px\",\r\n        }}\r\n      >\r\n        {board.map((row, rIdx) =>\r\n          row.map((cell, cIdx) => (\r\n            <div\r\n              key={`${rIdx}-${cIdx}`}\r\n              onClick={() => makeMove(cIdx)}\r\n              style={{\r\n                width: \"60px\",\r\n                height: \"60px\",\r\n                backgroundColor:\r\n                  cell === \"X\"\r\n                    ? \"#d62828\"\r\n                    : cell === \"O\"\r\n                    ? \"#fcbf49\"\r\n                    : \"#1e3d3f\",\r\n                borderRadius: \"50%\",\r\n                cursor: turn === username ? \"pointer\" : \"not-allowed\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {cell && (\r\n                <span style={{ fontSize: \"24px\", color: \"#ffffff\", fontWeight: \"bold\" }}>\r\n                  {cell}\r\n                </span>\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}