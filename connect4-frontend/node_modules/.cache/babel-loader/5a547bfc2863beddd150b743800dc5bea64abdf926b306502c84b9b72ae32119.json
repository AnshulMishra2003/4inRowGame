{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\Assignment\\\\connect4-frontend2\\\\src\\\\components\\\\GameBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nconst GameBoard = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const username = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || \"Player\";\n  const gameId = location.pathname.split(\"/\").pop();\n  const [board, setBoard] = useState(Array.from({\n    length: ROWS\n  }, () => Array(COLS).fill(null)));\n  const [turn, setTurn] = useState(username);\n  const [opponent, setOpponent] = useState(\"Waiting...\");\n  const makeMove = col => {\n    if (turn !== username) return;\n    socket.emit(\"makeMove\", {\n      gameId,\n      column: col\n    });\n  };\n  useEffect(() => {\n    socket.on(\"moveMade\", ({\n      board: newBoard,\n      nextTurn\n    }) => {\n      setBoard(newBoard);\n      setTurn(nextTurn);\n    });\n    socket.on(\"gameOver\", ({\n      winner,\n      draw\n    }) => {\n      if (draw) {\n        alert(\"It's a draw!\");\n      } else if (winner === username) {\n        alert(\"You won!\");\n      } else {\n        alert(`${winner} won!`);\n      }\n      navigate(\"/\");\n    });\n    socket.on(\"playerJoined\", ({\n      opponentName\n    }) => {\n      setOpponent(opponentName);\n    });\n    return () => {\n      socket.off(\"moveMade\");\n      socket.off(\"gameOver\");\n      socket.off(\"playerJoined\");\n    };\n  }, [username, navigate, gameId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connect4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Turn: \", turn === username ? \"✅\" : \"⏳\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Playing against: \", opponent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${COLS}, 60px)`,\n        gap: \"5px\",\n        justifyContent: \"center\",\n        marginTop: \"20px\"\n      },\n      children: board.map((row, rIdx) => row.map((cell, cIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => makeMove(cIdx),\n        style: {\n          width: \"60px\",\n          height: \"60px\",\n          backgroundColor: cell === \"X\" ? \"#d62828\" : cell === \"O\" ? \"#fcbf49\" : \"#e0e0e0\",\n          borderRadius: \"50%\",\n          border: \"2px solid #333\",\n          cursor: turn === username ? \"pointer\" : \"not-allowed\"\n        }\n      }, `${rIdx}-${cIdx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"wMRDCl7FtfuBCYFIaxTrBm2RrZE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","socket","jsxDEV","_jsxDEV","ROWS","COLS","GameBoard","_s","_location$state","location","navigate","username","state","gameId","pathname","split","pop","board","setBoard","Array","from","length","fill","turn","setTurn","opponent","setOpponent","makeMove","col","emit","column","on","newBoard","nextTurn","winner","draw","alert","opponentName","off","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","justifyContent","marginTop","map","row","rIdx","cell","cIdx","onClick","width","height","backgroundColor","borderRadius","border","cursor","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/Assignment/connect4-frontend2/src/components/GameBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport socket from \"../socket\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nconst GameBoard = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const username = location.state?.username || \"Player\";\r\n  const gameId = location.pathname.split(\"/\").pop();\r\n\r\n  const [board, setBoard] = useState(Array.from({ length: ROWS }, () => Array(COLS).fill(null)));\r\n  const [turn, setTurn] = useState(username);\r\n  const [opponent, setOpponent] = useState(\"Waiting...\");\r\n\r\n  const makeMove = (col) => {\r\n    if (turn !== username) return;\r\n    socket.emit(\"makeMove\", { gameId, column: col });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"moveMade\", ({ board: newBoard, nextTurn }) => {\r\n      setBoard(newBoard);\r\n      setTurn(nextTurn);\r\n    });\r\n\r\n    socket.on(\"gameOver\", ({ winner, draw }) => {\r\n      if (draw) {\r\n        alert(\"It's a draw!\");\r\n      } else if (winner === username) {\r\n        alert(\"You won!\");\r\n      } else {\r\n        alert(`${winner} won!`);\r\n      }\r\n      navigate(\"/\");\r\n    });\r\n\r\n    socket.on(\"playerJoined\", ({ opponentName }) => {\r\n      setOpponent(opponentName);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"moveMade\");\r\n      socket.off(\"gameOver\");\r\n      socket.off(\"playerJoined\");\r\n    };\r\n  }, [username, navigate, gameId]);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h2>Connect4</h2>\r\n      <h3>Your Turn: {turn === username ? \"✅\" : \"⏳\"}</h3>\r\n      <h4>Playing against: {opponent}</h4>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: `repeat(${COLS}, 60px)`,\r\n          gap: \"5px\",\r\n          justifyContent: \"center\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        {board.map((row, rIdx) =>\r\n          row.map((cell, cIdx) => (\r\n            <div\r\n              key={`${rIdx}-${cIdx}`}\r\n              onClick={() => makeMove(cIdx)}\r\n              style={{\r\n                width: \"60px\",\r\n                height: \"60px\",\r\n                backgroundColor:\r\n                  cell === \"X\" ? \"#d62828\" : cell === \"O\" ? \"#fcbf49\" : \"#e0e0e0\",\r\n                borderRadius: \"50%\",\r\n                border: \"2px solid #333\",\r\n                cursor: turn === username ? \"pointer\" : \"not-allowed\",\r\n              }}\r\n            ></div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}